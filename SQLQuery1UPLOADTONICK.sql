CREATE TABLE PRODUCTS(
ID INT PRIMARY KEY NOT NULL IDENTITY(1,1),
Prod_name VARCHAR(255) NOT NULL,
PRICE INT NOT NULL,
);

INSERT INTO PRODUCTS (Prod_name, PRICE)  Values ('Toy', 25),
('Cat', 10),
('Dog', 70);





CREATE TABLE CUSTOMERS(
ID INT PRIMARY KEY NOT NULL IDENTITY(1,1),
Firstname varchar(255) NOT NULL,
Lastname varchar(255) NOT NULL,
Cardnumber varchar(16) NOT NULL
);

INSERT INTO CUSTOMERS Values ('Cus1_FN', 'Cus1_LN', '1234567812345678'),
('Cus2_FN', 'Cus2_LN', '1234545433424'),
('Cus3_FN', 'Cus3_LN', '94256313438')



CREATE TABLE ORDERS(
ID INT PRIMARY KEY NOT NULL IDENTITY(1,1),
PRODUCT_ID  INT FOREIGN KEY REFERENCES PRODUCTS(ID),
CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMERS(ID),
);

INSERT INTO ORDERS Values (1, 1 ),
(2, 2 ),
(3,3)

INSERT INTO PRODUCTS VALUES ('IPHONE', 200);
INSERT INTO CUSTOMERS VALUES ('TINA', 'SMITH', '1234432112344321');
INSERT INTO ORDERS VALUES(5,4);
INSERT INTO ORDERS VALUES(5,3);
INSERT INTO ORDERS VALUES(4,2);
INSERT INTO ORDERS VALUES(2,4);


-- List all orders by tina
SELECT ORDERS.CUSTOMER_ID, ORDERS.PRODUCT_ID 
FROM ORDERS
WHERE ORDERS.CUSTOMER_ID = 4; 

-- UPDATE IPHONE TO 250
UPDATE PRODUCTS
SET PRICE = 250,
WHERE PRODUCTS.Prod_name = 'IPHONE';

// Select total revenue
SELECT SUM(p.Price) from ORDERS o inner join PRODUCTS p on o.PRODUCT_ID =p.Id where P.Prod_name = 'IPhone'
